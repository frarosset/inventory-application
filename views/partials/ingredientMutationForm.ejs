<%_ const postUrl = locals.edit ? `/ingredients/${data.id}/edit` : "/ingredients/new" _%>
<form action=<%= postUrl %> method="POST">
  <%- include("formValidationErrors.ejs") _%>
  <fieldset>
    <%- include("input.ejs",{type: "text", name: "name", label: "Name", maxlength: process.env.NAME_MAX_LENGTH, required: true,  pattern: process.env.NAME_REGEX, title: process.env.NAME_REGEX_MSG}) _%>
    <%_ 
        const dd = process.env.INGREDIENT_PRICE_DECIMAL_DIGITS;
        const step = Number(`1e-${dd}`).toFixed(dd); ;
      _%>
    <%- include("input.ejs",{type: "number", name: "price", label: "Price", min: 0, step, required: true}) _%>
    <%- include("input.ejs",{type: "number", name: "stock", label: "Stock", min: 0, step: 1, required: true}) _%>
    <%- include("textarea.ejs",{name: "notes", label: "Notes", maxlength: process.env.NOTES_MAX_LENGTH, pattern: process.env.NOTES_REGEX, title: process.env.NOTES_REGEX_MSG}) _%>
  </fieldset>
  <%- include("protectedFieldset.ejs") _%>
  <fieldset>
    <legend>Categories Rules</legend>
    <p>
      Select the categories that are
      <span class="enforcing" title="These categories are automatically added when this ingredient is used (unless incompatible)">enforced</span>
      by this ingredient or
      <span class="incompatible" title="These categories are automatically excluded this when this ingredient is used">incompatible</span>
      with it.
    </p>
    <%- include("multiStateCheckboxInputList.ejs", {list: categories, states: ["none","enforcedCategories","incompatibleCategories"]}) _%>
  </fieldset>
  <fieldset>
    <legend>Add to these Pizzas</legend>
    <%- include("protectedCheckboxInputList.ejs", {name: "pizzas", list: pizzas, protectedValues: protectedPizzas}) _%>
  </fieldset>
  <div>
    <button type="button" onclick="history.back()">Back</button>
    <button><%= locals.edit ? "UPDATE" : "EDIT" _%></button>
  </div>
</form>
<%- include("multiStateCheckboxScript.ejs") _%>