<%- include("checkboxInputList.ejs") _%>
<div id="passwordCheckboxListDiv">
  <p><strong>Some protected items have been selected.</strong> Admin password is required to apply changes to them.</p>
  <%- include("input.ejs",{type: "password", name: "passwordCheckboxList", label: "Password", maxlength: process.env.PWD_MAX_LENGTH}) _%>
</div>
<script>
  (() => {
    const protectedValuesSet = new Set(<%- JSON.stringify(protectedValues) _%>);
    const checkboxInputs = Array.from(document.querySelectorAll('input[name="<%= name %>"]'));
    const passwordCheckboxListDiv = document.querySelector("#passwordCheckboxListDiv");
    const passwordCheckboxList = passwordCheckboxListDiv.querySelector('input[type="password"]');

    function hasProtectedSelected() {
      const selected = checkboxInputs.filter(input => input.checked);
      return selected.some(input => protectedValuesSet.has(input.value));
    }

    const setPasswordCheckboxListConstraints = () => {
      if (hasProtectedSelected()) {
        passwordCheckboxList.required = true;
        passwordCheckboxList.disabled = false;
        passwordCheckboxListDiv.style.visibility = "visible";
      } else {
        passwordCheckboxList.required = false;
        passwordCheckboxList.disabled = true;
        passwordCheckboxListDiv.style.visibility = "hidden";
      }
    }

    checkboxInputs.forEach(input => {
      input.onchange = setPasswordCheckboxListConstraints;

      // add protected symbol to help the user identifying protected items
      if (protectedValuesSet.has(input.value))
        input.nextElementSibling.insertAdjacentHTML("beforeend", "<%- include('isProtectedSymbol.ejs', {is_protected: true}) %>");
    });

    window.addEventListener('pageshow', setPasswordCheckboxListConstraints);
  })();
</script>